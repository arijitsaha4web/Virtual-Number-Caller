{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @packageDocumentation\n * @module Voice\n * @internalapi\n */\n// @ts-nocheck\nvar events_1 = require(\"events\");\nvar log_1 = require(\"./log\");\nvar request_1 = require(\"./request\");\n/**\n * Builds Endpoint Analytics (EA) event payloads and sends them to\n *   the EA server.\n * @constructor\n * @param {String} productName - Name of the product publishing events.\n * @param {String} token - The JWT token to use to authenticate with\n *   the EA server.\n * @param {EventPublisher.Options} options\n * @property {Boolean} isEnabled - Whether or not this publisher is publishing\n *   to the server. Currently ignores the request altogether, in the future this\n *   may store them in case publishing is re-enabled later. Defaults to true.\n */\n/**\n * @typedef {Object} EventPublisher.Options\n * @property {Object} [metadata=undefined] - A publisher_metadata object to send\n *   with each payload.\n * @property {String} [host='eventgw.twilio.com'] - The host address of the EA\n *   server to publish to.\n * @property {Object|Function} [defaultPayload] - A default payload to extend\n *   when creating and sending event payloads. Also takes a function that\n *   should return an object representing the default payload. This is\n *   useful for fields that should always be present when they are\n *   available, but are not always available.\n */\nvar EventPublisher = /** @class */function (_super) {\n  __extends(EventPublisher, _super);\n  function EventPublisher(productName, token, options) {\n    var _this = _super.call(this) || this;\n    if (!(_this instanceof EventPublisher)) {\n      return new EventPublisher(productName, token, options);\n    }\n    // Apply default options\n    options = Object.assign({\n      defaultPayload: function () {\n        return {};\n      }\n    }, options);\n    var defaultPayload = options.defaultPayload;\n    if (typeof defaultPayload !== 'function') {\n      defaultPayload = function () {\n        return Object.assign({}, options.defaultPayload);\n      };\n    }\n    var isEnabled = true;\n    var metadata = Object.assign({\n      app_name: undefined,\n      app_version: undefined\n    }, options.metadata);\n    Object.defineProperties(_this, {\n      _defaultPayload: {\n        value: defaultPayload\n      },\n      _host: {\n        value: options.host,\n        writable: true\n      },\n      _isEnabled: {\n        get: function () {\n          return isEnabled;\n        },\n        set: function (_isEnabled) {\n          isEnabled = _isEnabled;\n        }\n      },\n      _log: {\n        value: new log_1.default('EventPublisher')\n      },\n      _request: {\n        value: options.request || request_1.default,\n        writable: true\n      },\n      _token: {\n        value: token,\n        writable: true\n      },\n      isEnabled: {\n        enumerable: true,\n        get: function () {\n          return isEnabled;\n        }\n      },\n      metadata: {\n        enumerable: true,\n        get: function () {\n          return metadata;\n        }\n      },\n      productName: {\n        enumerable: true,\n        value: productName\n      },\n      token: {\n        enumerable: true,\n        get: function () {\n          return this._token;\n        }\n      }\n    });\n    return _this;\n  }\n  return EventPublisher;\n}(events_1.EventEmitter);\n/**\n * Post to an EA server.\n * @private\n * @param {String} endpointName - Endpoint to post the event to\n * @param {String} level - ['debug', 'info', 'warning', 'error']\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @param {?Boolean} [force=false] - Whether or not to send this even if\n *    publishing is disabled.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype._post = function _post(endpointName, level, group, name, payload, connection, force) {\n  var _this = this;\n  if (!this.isEnabled && !force || !this._host) {\n    this._log.debug('Publishing cancelled', JSON.stringify({\n      isEnabled: this.isEnabled,\n      force: force,\n      host: this._host\n    }));\n    return Promise.resolve();\n  }\n  if (!connection || (!connection.parameters || !connection.parameters.CallSid) && !connection.outboundConnectionId) {\n    if (!connection) {\n      this._log.debug('Publishing cancelled. Missing connection object');\n    } else {\n      this._log.debug('Publishing cancelled. Missing connection info', JSON.stringify({\n        outboundConnectionId: connection.outboundConnectionId,\n        parameters: connection.parameters\n      }));\n    }\n    return Promise.resolve();\n  }\n  var event = {\n    group: group,\n    level: level.toUpperCase(),\n    name: name,\n    payload: payload && payload.forEach ? payload.slice(0) : Object.assign(this._defaultPayload(connection), payload),\n    payload_type: 'application/json',\n    private: false,\n    publisher: this.productName,\n    timestamp: new Date().toISOString()\n  };\n  if (this.metadata) {\n    event.publisher_metadata = this.metadata;\n  }\n  if (endpointName === 'EndpointEvents') {\n    this._log.debug('Publishing insights', JSON.stringify({\n      endpointName: endpointName,\n      event: event,\n      force: force,\n      host: this._host\n    }));\n  }\n  var requestParams = {\n    body: event,\n    headers: {\n      'Content-Type': 'application/json',\n      'X-Twilio-Token': this.token\n    },\n    url: \"https://\" + this._host + \"/v4/\" + endpointName\n  };\n  return new Promise(function (resolve, reject) {\n    _this._request.post(requestParams, function (err) {\n      if (err) {\n        _this.emit('error', err);\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  }).catch(function (e) {\n    _this._log.error(\"Unable to post \" + group + \" \" + name + \" event to Insights. Received error: \" + e);\n  });\n};\n/**\n * Post an event to the EA server. Use this method when the level\n *  is dynamic. Otherwise, it's better practice to use the sugar\n *  methods named for the specific level.\n * @param {String} level - ['debug', 'info', 'warning', 'error']\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.post = function post(level, group, name, payload, connection, force) {\n  return this._post('EndpointEvents', level, group, name, payload, connection, force);\n};\n/**\n * Post a debug-level event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.debug = function debug(group, name, payload, connection) {\n  return this.post('debug', group, name, payload, connection);\n};\n/**\n * Post an info-level event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.info = function info(group, name, payload, connection) {\n  return this.post('info', group, name, payload, connection);\n};\n/**\n * Post a warning-level event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.warn = function warn(group, name, payload, connection) {\n  return this.post('warning', group, name, payload, connection);\n};\n/**\n * Post an error-level event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.error = function error(group, name, payload, connection) {\n  return this.post('error', group, name, payload, connection);\n};\n/**\n * Post a metrics event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {Array<Object>} metrics - The metrics to post.\n * @param {?Object} [customFields] - Custom fields to append to each payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.postMetrics = function postMetrics(group, name, metrics, customFields, connection) {\n  var _this = this;\n  return new Promise(function (resolve) {\n    var samples = metrics.map(formatMetric).map(function (sample) {\n      return Object.assign(sample, customFields);\n    });\n    resolve(_this._post('EndpointMetrics', 'info', group, name, samples, connection));\n  });\n};\n/**\n * Update the host address of the insights server to publish to.\n * @param {String} host - The new host address of the insights server.\n */\nEventPublisher.prototype.setHost = function setHost(host) {\n  this._host = host;\n};\n/**\n * Update the token to use to authenticate requests.\n * @param {string} token\n * @returns {void}\n */\nEventPublisher.prototype.setToken = function setToken(token) {\n  this._token = token;\n};\n/**\n * Enable the publishing of events.\n */\nEventPublisher.prototype.enable = function enable() {\n  this._isEnabled = true;\n};\n/**\n * Disable the publishing of events.\n */\nEventPublisher.prototype.disable = function disable() {\n  this._isEnabled = false;\n};\nfunction formatMetric(sample) {\n  return {\n    audio_codec: sample.codecName,\n    audio_level_in: sample.audioInputLevel,\n    audio_level_out: sample.audioOutputLevel,\n    bytes_received: sample.bytesReceived,\n    bytes_sent: sample.bytesSent,\n    call_volume_input: sample.inputVolume,\n    call_volume_output: sample.outputVolume,\n    jitter: sample.jitter,\n    mos: sample.mos && Math.round(sample.mos * 100) / 100,\n    packets_lost: sample.packetsLost,\n    packets_lost_fraction: sample.packetsLostFraction && Math.round(sample.packetsLostFraction * 100) / 100,\n    packets_received: sample.packetsReceived,\n    rtt: sample.rtt,\n    timestamp: new Date(sample.timestamp).toISOString(),\n    total_bytes_received: sample.totals.bytesReceived,\n    total_bytes_sent: sample.totals.bytesSent,\n    total_packets_lost: sample.totals.packetsLost,\n    total_packets_received: sample.totals.packetsReceived,\n    total_packets_sent: sample.totals.packetsSent\n  };\n}\nexports.default = EventPublisher;","map":{"version":3,"names":["events_1","require","log_1","request_1","EventPublisher","_super","__extends","productName","token","options","_this","call","Object","assign","defaultPayload","isEnabled","metadata","app_name","undefined","app_version","defineProperties","_defaultPayload","value","_host","host","writable","_isEnabled","get","set","_log","default","_request","request","_token","enumerable","EventEmitter","prototype","_post","endpointName","level","group","name","payload","connection","force","debug","JSON","stringify","Promise","resolve","parameters","CallSid","outboundConnectionId","event","toUpperCase","forEach","slice","payload_type","private","publisher","timestamp","Date","toISOString","publisher_metadata","requestParams","body","headers","url","reject","post","err","emit","catch","e","error","info","warn","postMetrics","metrics","customFields","samples","map","formatMetric","sample","setHost","setToken","enable","disable","audio_codec","codecName","audio_level_in","audioInputLevel","audio_level_out","audioOutputLevel","bytes_received","bytesReceived","bytes_sent","bytesSent","call_volume_input","inputVolume","call_volume_output","outputVolume","jitter","mos","Math","round","packets_lost","packetsLost","packets_lost_fraction","packetsLostFraction","packets_received","packetsReceived","rtt","total_bytes_received","totals","total_bytes_sent","total_packets_lost","total_packets_received","total_packets_sent","packetsSent","exports"],"sources":["C:\\Users\\91629\\Desktop\\Delote\\calling software\\node_modules\\@twilio\\voice-sdk\\lib\\twilio\\eventpublisher.ts"],"sourcesContent":["/**\n * @packageDocumentation\n * @module Voice\n * @internalapi\n */\n// @ts-nocheck\nimport { EventEmitter } from 'events';\nimport Log from './log';\nimport request from './request';\n\n/**\n * Builds Endpoint Analytics (EA) event payloads and sends them to\n *   the EA server.\n * @constructor\n * @param {String} productName - Name of the product publishing events.\n * @param {String} token - The JWT token to use to authenticate with\n *   the EA server.\n * @param {EventPublisher.Options} options\n * @property {Boolean} isEnabled - Whether or not this publisher is publishing\n *   to the server. Currently ignores the request altogether, in the future this\n *   may store them in case publishing is re-enabled later. Defaults to true.\n */\n/**\n * @typedef {Object} EventPublisher.Options\n * @property {Object} [metadata=undefined] - A publisher_metadata object to send\n *   with each payload.\n * @property {String} [host='eventgw.twilio.com'] - The host address of the EA\n *   server to publish to.\n * @property {Object|Function} [defaultPayload] - A default payload to extend\n *   when creating and sending event payloads. Also takes a function that\n *   should return an object representing the default payload. This is\n *   useful for fields that should always be present when they are\n *   available, but are not always available.\n */\nclass EventPublisher extends EventEmitter {\n  constructor(productName, token, options) {\n    super();\n\n    if (!(this instanceof EventPublisher)) {\n      return new EventPublisher(productName, token, options);\n    }\n\n    // Apply default options\n    options = Object.assign({ defaultPayload() { return { }; } }, options);\n\n    let defaultPayload = options.defaultPayload;\n\n    if (typeof defaultPayload !== 'function') {\n      defaultPayload = () => Object.assign({ }, options.defaultPayload);\n    }\n\n    let isEnabled = true;\n    const metadata = Object.assign({ app_name: undefined, app_version: undefined }, options.metadata);\n\n    Object.defineProperties(this, {\n      _defaultPayload: { value: defaultPayload },\n      _host: { value: options.host, writable: true },\n      _isEnabled: {\n        get() { return isEnabled; },\n        set(_isEnabled) { isEnabled = _isEnabled; },\n      },\n      _log: { value: new Log('EventPublisher') },\n      _request: { value: options.request || request, writable: true },\n      _token: { value: token, writable: true },\n      isEnabled: {\n        enumerable: true,\n        get() { return isEnabled; },\n      },\n      metadata: {\n        enumerable: true,\n        get() { return metadata; },\n      },\n      productName: { enumerable: true, value: productName },\n      token: {\n        enumerable: true,\n        get() { return this._token; },\n      },\n    });\n  }\n}\n\n/**\n * Post to an EA server.\n * @private\n * @param {String} endpointName - Endpoint to post the event to\n * @param {String} level - ['debug', 'info', 'warning', 'error']\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @param {?Boolean} [force=false] - Whether or not to send this even if\n *    publishing is disabled.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype._post = function _post(endpointName, level, group, name, payload, connection, force) {\n  if ((!this.isEnabled && !force) || !this._host) {\n    this._log.debug('Publishing cancelled', JSON.stringify({ isEnabled: this.isEnabled, force, host: this._host }));\n    return Promise.resolve();\n  }\n\n  if (!connection || ((!connection.parameters || !connection.parameters.CallSid) && !connection.outboundConnectionId)) {\n    if (!connection) {\n      this._log.debug('Publishing cancelled. Missing connection object');\n    } else {\n      this._log.debug('Publishing cancelled. Missing connection info', JSON.stringify({\n        outboundConnectionId: connection.outboundConnectionId, parameters: connection.parameters,\n      }));\n    }\n    return Promise.resolve();\n  }\n\n  const event = {\n    group,\n    level: level.toUpperCase(),\n    name,\n    payload: (payload && payload.forEach) ?\n      payload.slice(0) : Object.assign(this._defaultPayload(connection), payload),\n      payload_type: 'application/json',\n      private: false,\n    publisher: this.productName,\n    timestamp: (new Date()).toISOString(),\n  };\n\n  if (this.metadata) {\n    event.publisher_metadata = this.metadata;\n  }\n\n  if (endpointName === 'EndpointEvents') {\n    this._log.debug(\n      'Publishing insights',\n      JSON.stringify({ endpointName, event, force, host: this._host }),\n    );\n  }\n\n  const requestParams = {\n    body: event,\n    headers: {\n      'Content-Type': 'application/json',\n      'X-Twilio-Token': this.token,\n    },\n    url: `https://${this._host}/v4/${endpointName}`,\n  };\n\n  return new Promise((resolve, reject) => {\n    this._request.post(requestParams, err => {\n      if (err) {\n        this.emit('error', err);\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  }).catch(e => {\n    this._log.error(`Unable to post ${group} ${name} event to Insights. Received error: ${e}`);\n  });\n};\n\n/**\n * Post an event to the EA server. Use this method when the level\n *  is dynamic. Otherwise, it's better practice to use the sugar\n *  methods named for the specific level.\n * @param {String} level - ['debug', 'info', 'warning', 'error']\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.post = function post(level, group, name, payload, connection, force) {\n  return this._post('EndpointEvents', level, group, name, payload, connection, force);\n};\n\n/**\n * Post a debug-level event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.debug = function debug(group, name, payload, connection) {\n  return this.post('debug', group, name, payload, connection);\n};\n\n/**\n * Post an info-level event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.info = function info(group, name, payload, connection) {\n  return this.post('info', group, name, payload, connection);\n};\n\n/**\n * Post a warning-level event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.warn = function warn(group, name, payload, connection) {\n  return this.post('warning', group, name, payload, connection);\n};\n\n/**\n * Post an error-level event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.error = function error(group, name, payload, connection) {\n  return this.post('error', group, name, payload, connection);\n};\n\n/**\n * Post a metrics event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {Array<Object>} metrics - The metrics to post.\n * @param {?Object} [customFields] - Custom fields to append to each payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.postMetrics = function postMetrics(group, name, metrics, customFields, connection) {\n  return new Promise(resolve => {\n    const samples = metrics\n      .map(formatMetric)\n      .map(sample => Object.assign(sample, customFields));\n\n    resolve(this._post('EndpointMetrics', 'info', group, name, samples, connection));\n  });\n};\n\n/**\n * Update the host address of the insights server to publish to.\n * @param {String} host - The new host address of the insights server.\n */\nEventPublisher.prototype.setHost = function setHost(host) {\n  this._host = host;\n};\n\n/**\n * Update the token to use to authenticate requests.\n * @param {string} token\n * @returns {void}\n */\nEventPublisher.prototype.setToken = function setToken(token) {\n  this._token = token;\n};\n\n/**\n * Enable the publishing of events.\n */\nEventPublisher.prototype.enable = function enable() {\n  this._isEnabled = true;\n};\n\n/**\n * Disable the publishing of events.\n */\nEventPublisher.prototype.disable = function disable() {\n  this._isEnabled = false;\n};\n\nfunction formatMetric(sample) {\n  return {\n    audio_codec: sample.codecName,\n    audio_level_in: sample.audioInputLevel,\n    audio_level_out: sample.audioOutputLevel,\n    bytes_received: sample.bytesReceived,\n    bytes_sent: sample.bytesSent,\n    call_volume_input: sample.inputVolume,\n    call_volume_output: sample.outputVolume,\n    jitter: sample.jitter,\n    mos: sample.mos && (Math.round(sample.mos * 100) / 100),\n    packets_lost: sample.packetsLost,\n    packets_lost_fraction: sample.packetsLostFraction &&\n      (Math.round(sample.packetsLostFraction * 100) / 100),\n    packets_received: sample.packetsReceived,\n    rtt: sample.rtt,\n    timestamp: (new Date(sample.timestamp)).toISOString(),\n    total_bytes_received: sample.totals.bytesReceived,\n    total_bytes_sent: sample.totals.bytesSent,\n    total_packets_lost: sample.totals.packetsLost,\n    total_packets_received: sample.totals.packetsReceived,\n    total_packets_sent: sample.totals.packetsSent,\n  };\n}\n\nexport default EventPublisher;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}